# 0-add_integer.txt

0-add_integer.py Usage

This module explains the integer addition function ``add_integer(a, b=98)``.

Application

``add_integer(...)``` returns the sum of its two arguments. For numbers,
that value is equivalent to using the ``+`` operator.



    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(2, 3)
    5



    >>> add_integer(2, -3)
    -1

Furthermore, it is usable with floating-point values.



    >>> add_integer(2.0, 3.0)
    5

Normally, floats are cast to ints prior to performing addition.



    >>> add_integer(2.9, 0.2)
    2



    >>> add_integer(-2.9, -0.2)
    -2

Floating and non-floating-point values can be combined.

::

    >>> add_integer(2.3, -3)
    -1

Argument two is optional - by default, it is 98.



    >>> add_integer(2)
    100

Non-Numbers


``add_integer()`` requires both arguments are either integers or floats.
In case either argument is a non-integer and non-float, a TypeError arises:



    >>> add_integer("hello", 3)
    Traceback (most recent call last):
    TypeError: a must be an integer



    >>> add_integer(2, "hello")
    Traceback (most recent call last):
    TypeError: b must be an integer



    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer



    >>> add_integer(2.3, None)
    Traceback (most recent call last):
    TypeError: an interger

When both the arguments are non-integers and non-floats, a TypeError disclaimer is only
printed for the first argument.



    >>> add_integer("hello", "there")
    Traceback (most recent call last):
    TypeError: a must be an integer

The function will fail whenever infinity .



    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
     



    >>> add_integer(2, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

And again with NaN numbers.



    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer.



    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

